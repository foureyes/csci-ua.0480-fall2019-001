I"+<section class="intro-slide">
  <h1 id="web-servers">Web Servers</h1>

  <h3 id="csci-ua0480-001">CSCI-UA.0480-001</h3>

  <p><small></small></p>
</section>

<section>
  <h2 id="serving-static-sites-remote-server-administration">Serving Static Sites, Remote Server Administration</h2>

  <p>Before we move on, it wouldn&#39;t be a class about the web without talking about serving <strong>static sites</strong>.</p>

  <ul>
    <li>you can think of <strong>static sites</strong> as sites that have pages that are served up from the file system <strong>as is</strong>. The content is not generated dynamically from a server-side web application.</li>
    <li><strong>This site is actually a static site!</strong> If you know a little bit of HTML, CSS and client side JavaScript (all of which we&#39;ll discuss later during the semester), a static site may suit your needs.</li>
  </ul>
</section>

<section>
  <h2 id="a-quick-survey-of-options">A Quick Survey of Options</h2>

  <p><strong>So&#8230; where do I <em>host</em> my static site? What are some options?</strong> &#8594;</p>

  <ul class="fragment">
    <li>(in order of <em>my</em> preference)</li>
    <li>github pages</li>
    <li>weebly, squarespace, wordpress (these aren&#39;t exactly just static sites, but no server side experience needed)</li>
    <li>run a web server in AWS/Rackspace/DigitalOcean&#8230; or some other VPS, dedicated hosting, etc.</li>
    <li>(I guess Amazon S3 as well)</li>
  </ul>
</section>

<section>
  <h2 id="lets-about-a-couple-of-these">Let&#39;s About a Couple of These</h2>

  <ol>
    <li>github pages - since we&#39;re already using github to host our repositories</li>
    <li>run a web server - &#39;cause I found out no one&#39;s ever ssh&#39;d into a remote server before in our last class</li>
  </ol>

  <p>(and to be honest, I&#39;ve only briefly looked at weebly, squarespace, etc.)</p>
</section>

<section>
  <h2 id="github-pages">GitHub Pages</h2>

  <p>GitHub has a feature called <a href="https://pages.github.com/">Pages</a> (we&#39;ll use project pages, rather than user pages).</p>

  <ul>
    <li>automatic site generator via repository settings</li>
    <li>via commandline &#8230;
      <ul>
        <li>clone repository</li>
        <li>create a new <strong>branch</strong> called gh-pages</li>
        <li>add a file</li>
        <li>push your changes to github</li>
        <li>go to: username.github.io/repository-name</li>
        <li>(or use the online editor!)</li>
      </ul>
    </li>
  </ul>
</section>

<section>
  <h2 id="it-hasnt-changed-since-the-90s">It Hasn&#39;t Changed Since the 90&#39;s</h2>

  <p>The next bit is about working with traditional web servers like Apache, lighttpd, Nginx, etc. Generally, in these cases, you&#39;ll be working with a remote server, so you&#39;ll need tools to connect to a remote machine. Let&#39;s talk about:</p>

  <ul>
    <li><strong>ssh</strong> - secure shell</li>
    <li><strong>scp</strong> - secure copy</li>
    <li><strong>sftp</strong> - secure file transfer</li>
    <li><strong>graphical sftp</strong> - transmit, fetch, etc.</li>
  </ul>
</section>

<section>
  <h2 id="ssh">ssh</h2>

  <p>ssh gives you remote terminal access to a server. You can issue commands on the server as you would commands in terminal on your computer!</p>

  <pre><code data-trim="" contenteditable="">
ssh username@hostname
</code></pre>

  <p>(then you can edit files directly&#8230; using nano, emacs or, of course, vim!)</p>
</section>

<section>
  <h2 id="scp">scp</h2>

  <p>scp allows you to copy a file from your local machine to a remote computer.</p>

  <pre><code data-trim="" contenteditable="">
scp file.to.copy username@hostname:/path/to/copy/to
</code></pre>

</section>

<section>
  <h2 id="sftp">sftp</h2>

  <p>sftp is a commandline sftp client. Typing in</p>

  <pre><code data-trim="" contenteditable="">
sftp username@hostname
</code></pre>

  <p>will give you <strong>yet another shell</strong>, where you can issue commands like:</p>

  <ul>
    <li><strong>ls</strong> - list files (same as usual)</li>
    <li><strong>pwd</strong> - print working directory (same as usual)</li>
    <li><strong>cd</strong> - change directory (same as usual)</li>
    <li><strong>put</strong> - copy a local file to remote server</li>
  </ul>
</section>

<section>
  <h2 id="you-can-use-all-of-these-methods-to-transfer-files">You Can Use All of These Methods to Transfer Files</h2>

  <p>If you&#39;re running Apache on Debian, you can drop your files in &#8230;</p>

  <pre><code data-trim="" contenteditable="">
/var/www
</code></pre>

  <p>And voila. Served!</p>

</section>
:ET