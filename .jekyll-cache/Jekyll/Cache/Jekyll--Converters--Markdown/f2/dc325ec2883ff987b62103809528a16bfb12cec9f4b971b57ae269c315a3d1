I"ê<section class="intro-slide">
  <h1 id="about-class-3">About Class #3</h1>

  <h3 id="csci-ua0480-001">CSCI-UA.0480-001</h3>

  <p><small></small></p>
</section>

<section>
  <h2 id="todays-topics">Today&#39;s Topics</h2>

  <ul>
    <li>finish out <strong>functions</strong> (closures, optional arguments, hoisting)</li>
    <li>a <em>very quick</em> intro to <strong>Node.js</strong>, <strong>NPM</strong>, and <strong>debugging</strong></li>
    <li>a <em>primer</em> on <strong>Git</strong> and <strong>GitHub</strong></li>
    <li><strong>objects</strong> and <strong>arrays</strong></li>
    <li>homework clarifications</li>
  </ul>

</section>

<section>
  <h2 id="assignment-01">Assignment #01</h2>

  <ul>
    <li>if git clone doesn&#39;t work, use init workflow</li>
    <li>name the files and function exactly as specified</li>
    <li>commandline arguments: <code>process.argv[2]</code></li>
  </ul>

</section>

<section>
  <h2 id="wrapper-objects">Wrapper Objects</h2>

  <p><strong>This was actually in this week&#39;s set of slides =P</strong></p>

  <ul>
    <li>so&#8230; yes, they have different methods&#8230; buuuut</li>
    <li>used when using a number, string, boolean <em>like</em> an object (a new wrapper is created and discarded!?)</li>
  </ul>
</section>

<section>
  <h2 id="about-types-again">About Types (Again)</h2>
  <ul>
    <li>also&#8230; embarrassingly, there&#39;s a correction for types
      <ul>
        <li>typeof behaves kind of strangely</li>
        <li><em>actual</em> types in specification does not include function (it&#39;s just an object!), and adds null a distinct type from object</li>
        <li>(both of which contradict <code>typeof</code>&#39;s behavior)</li>
        <li>I&#39;ll accept either&#8230;</li>
      </ul>
    </li>
    <li><a href="http://www.ecma-international.org/ecma-262/5.1/#sec-8">specs for types</a> (but why? <code>typeof</code> does&#8230;)</li>
    <li><a href="http://www.ecma-international.org/ecma-262/5.1/#sec-11.4.3">specs for typeof</a> (yes, it behaves the way it&#39;s supposed to)</li>
    <li><a href="http://javascript.crockford.com/survey.html">mistakes were made</a> (says Crockford, the guy who <em>created</em> JSON)</li>
    <li>you got me again, JavaScript!</li>
  </ul>

</section>
:ET