I"´N<style>

.warning {
    background-color: #eecccc;
}

pre {
	display: inline-block;
	padding: 9.5px;
	margin: 0 0 10px;
	font-size: 15px;
	word-break: break-all;
	word-wrap: break-word;
	background-color: rgb(224, 229, 234);	
	color: #001446;
	border-radius: 4px;
	border: none !important;
}

#final h4 {
	font-size:1.2em;
	margin-top: 1.5em;
	text-decoration: underline;
}
</style>

<div class="panel panel-default">
	<div class="panel-heading">Final Project</div>
	<div class="panel-body">

    <h1 id="final-project-final-milestone-due-426-429">Final Project, <strong>Final Milestone Due</strong> <strike>4/26</strike> 4/29</h1>

    <p>Earlier milestones due throughout April</p>

    <h2 id="overview">Overview</h2>

    <p>Create a <strong>small</strong> web application using Express and MongoDB. Build the application incrementally over the course of 4 weeks.</p>

    <p><a name="requirements"></a></p>

    <h2 id="project-requirements">Project Requirements</h2>

    <h3 id="requirements">Requirements</h3>

    <ul>
      <li>You must use Express and MongoDB (or other server-side framework and database with permission)</li>
      <li>You must write your own code, with annotations/references added for any code sourced from books, online tutorials, etc.</li>
    </ul>

    <h3 id="grading-rubric">Grading Rubric</h3>

    <p><strong>Completing the milestones leading up to the due date is required!</strong> Milestones 1 through 3 are worth over half of your final project grade.</p>

    <ul>
      <li>(20) Milestone #1 - requirements, draft data model, and a skeleton application</li>
      <li>(20) Milestone #2 - deployment attempt and a single working form (<strong>You cannot change <em>your idea</em> for your final project after this</strong>, but you can still make minor modifications)</li>
      <li>(20 points) Milestone #3 - two working forms and proof of work on research topics</li>
      <li>(40 points total) Completed project
        <ul>
          <li>(12 points) minimum 3 x forms or ajax interactions (<strong>excluding login</strong>)</li>
          <li>(6 points) minimum 3 x any of the following (can be the same):
            <ul>
              <li>es6 classes that you&#39;ve written yourself (using the <code class="highlighter-rouge">class</code> keyword)</li>
              <li>Object.create (where prototype matters)</li>
              <li>original higher order functions that you&#39;ve written yourself</li>
              <li>or use any of these built-in higher order functions found in <code class="highlighter-rouge">Array.prototype</code>: <code class="highlighter-rouge">map</code>, <code class="highlighter-rouge">reduce</code>, <code class="highlighter-rouge">filter</code></li>
            </ul>
          </li>
          <li>(2 points) minimum 2 x mongoose schemas</li>
          <li>(8 points) stability / security
            <ul>
              <li>simple validation on user input to prevent application from crashing</li>
              <li>doesn&#39;t allow user input to be displayed unescaped directly on page</li>
              <li>pages that require authentication cannot be accessed without authentication</li>
              <li>data specified as private to a user cannot be viewed by another user</li>
              <li>etc.</li>
            </ul>
          </li>
          <li>(4 points) <em>originality</em>
            <ul>
              <li>is not mostly based on existing homework</li>
              <li>majority of code is not from online tutorial</li>
            </ul>
          </li>
          <li>(8 points) worth of research topics; see below</li>
        </ul>
      </li>
    </ul>

    <h2 id="additional-requirements-your-choice">Additional Requirements, Your Choice</h2>

    <p>Choose at least <strong>8 points</strong> worth of these following topics (research and implementation). <strong>This list may change slightly (added items, adjustments to points) as project ideas come in.</strong></p>

    <ul>
      <li>(3 points) Unit testing with JavaScript
        <ul>
          <li><a href="http://jasmine.github.io/">Jasmine</a></li>
          <li><a href="https://github.com/mochajs/mocha">Mocha</a></li>
          <li>Any others found through research</li>
          <li>Minimally 4 tests</li>
          <li>You&#39;ll have to link to testing code in repository</li>
          <li>&#8230; and show a screen capture of tests</li>
        </ul>
      </li>
      <li>(5 points) Automated functional testing for all of your routes using any of the following:
        <ul>
          <li><a href="http://www.seleniumhq.org/">Selenium</a></li>
          <li><a href="https://developers.google.com/web/updates/2017/06/headless-karma-mocha-chai">Headless Chrome</a> - headless browser testing</li>
          <li>Minimally 4 tests</li>
          <li>You&#39;ll have to link to testing code in repository</li>
          <li>&#8230; and show a screen capture of tests</li>
        </ul>
      </li>
      <li>(3 points) Configuration management
        <ul>
          <li><a href="https://github.com/flatiron/nconf">nconf</a></li>
          <li><a href="https://github.com/mozilla/node-convict">Node convict</a></li>
          <li>Any others found through research</li>
        </ul>
      </li>
      <li>(3 points) Use <a href="http://gruntjs.com/">grunt</a>, <a href="http://gulpjs.com/">gulp</a>, webpack or even make (!) to automate any of the following &#8230; must be used in combination with one or more of the other requirements, such as:
        <ul>
          <li>(2 points) Integrate ESLint / JSHint / JSLint into your workflow
            <ul>
              <li>Must be used <strong>with build tool</strong> (see above requirement on Grunt or Gulp</li>
              <li>Must have have configuration file in repository</li>
              <li>Must run on entire codebase <strong>outside of <code>node_modules</code> automatically on file change</strong> (<em>watch</em> for changes to the file system)</li>
              <li>Must link to relevant lines in build configuration and lint configuration</li>
              <li>Must show screen capture / animated gif of running on save</li>
            </ul>
          </li>
          <li>(2 points) Concatenation and minification of CSS  and JavaScript files
            <ul>
              <li>Must be used <strong>with build tool</strong> (see above requirement on Grunt or Gulp</li>
              <li>(Only client side files!)</li>
              <li>Only minify and concatenate client side JavaScript</li>
              <li>Must link to relevant lines in build configuration and mark-up (to show included css)</li>
              <li>Must run automatically on fille change</li>
              <li>Must show screen capture / animated gif of running on save</li>
            </ul>
          </li>
          <li>(2 points) Use a CSS preprocesser
            <ul>
              <li><a href="http://sass-lang.com/">Sass</a></li>
              <li><a href="http://lesscss.org/">Less</a></li>
              <li><a href="http://www.myth.io/">Myth</a></li>
              <li>Must link to relevant lines in build configuration and directory of <em>unprocessed</em> CSS source</li>
              <li>Must run automatically on fille change</li>
              <li>Must show screen capture / animated gif of running on save</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>(3 points) Perform client side form validation using custom JavaScript or JavaScript <strong>library</strong>
        <ul>
          <li>errors must be integrated into the DOM</li>
          <li>the following will not receive full credit:</li>
        </ul>
      </li>
      <li>(2 points) Use a CSS framework throughout your site, use a reasonable of customization of the framework (don&#39;t just use stock Bootstrap - minimally configure a theme):
        <ul>
          <li><a href="http://getbootstrap.com/">Bootstrap</a></li>
          <li><a href="http://foundation.zurb.com/">Foundation</a></li>
        </ul>
      </li>
      <li>(1 - 6 points) Use a <strong>server-side</strong> JavaScript library or module that we did not cover in class (not including any from other requirements)
        <ul>
          <li>assign a point value to the library or module that you&#39;re using based on amount of effort and/or code required for integration</li>
          <li>Must link to source code relevant to implementation and evidence of working implementation on site</li>
        </ul>
      </li>
      <li>(1 - 6 points) Use a <strong>client-side</strong> JavaScript library or module that we did not cover in class (not including any from other requirements)
        <ul>
          <li>assign a point value to the library or module that you&#39;re using based on amount of effort and/or code required for integration</li>
          <li>for example, angular 2 or d3 might be 6 points, while google maps might be 1 point</li>
          <li>Must link to source code relevant to implementation and evidence of working implementation on site</li>
        </ul>
      </li>
      <li>(1 - 6 points) Per external API used
        <ul>
          <li>assign a point value to the library or module that you&#39;re using based on amount of effort and/or code required for integration</li>
          <li>for example, angular 2 might be 6 points, while google maps might be 1 point</li>
          <li>Must link to source code relevant to implementation and API documentation</li>
        </ul>
      </li>
    </ul>

    <p><a name="milestone1"></a></p>

    <h2 id="milestones">Milestones</h2>

    <p><a name="proposal"></a></p>

    <h3 id="due-45-at-11pm---milestone-1---requirements--specifications-draft-data-model-skeleton-application-20-points"><strong>Due 4/5 at 11PM</strong> - Milestone 1 - Requirements / Specifications, Draft Data Model, Skeleton Application (20 points)</h3>

    <p><a href="https://github.com/nyu-csci-ua-0480-008-spring-2017/final-project-example">Check out sample documentation</a></p>

    <ul>
      <li>Documentation
        <ul>
          <li>Submit electronically through a supplied GitHub repository</li>
          <li>Write everything up in your README.md
            <ul>
              <li>Drop the images into your repository (either under a separate branch or in a folder called documentation)</li>
              <li><a href="http://stackoverflow.com/questions/10189356/how-to-add-screenshot-to-readmes-in-github-repository">Link to it based on this SO article</a></li>
            </ul>
          </li>
          <li>A one-paragraph description of your project</li>
          <li>Requirements
            <ul>
              <li>Sample documents (JSON / JavaScript literal objects will be fine, or your actualy Schemas) that you will store in your database, and a description of what each document represents</li>
              <li>Enumerate any references from one document to another</li>
            </ul>
          </li>
          <li>Wireframes (<a href="http://upload.wikimedia.org/wikipedia/commons/4/47/Profilewireframe.png">like this one</a>)
            <ul>
              <li><a href="http://www.onextrapixel.com/2011/03/28/creating-web-design-wireframes-tools-resources-and-best-practices/">a great article on wireframes</a></li>
              <li>some possible tools
                <ul>
                  <li>Hand-drawn</li>
                  <li>Balsamiq</li>
                  <li>Google drawings</li>
                  <li>Omnigraffle</li>
                  <li>Adobe tools such Photoshop (psds), Illustrator (ai) etc.</li>
                </ul>
              </li>
            </ul>
          </li>
          <li><a href="http://creately.com/diagram-community/popular/t/site-map">A Site Map (see examples)</a></li>
          <li>One of the following to represent what your application will actually do:
            <ul>
              <li>A list of user stories (<a href="http://en.wikipedia.org/wiki/User_story#Format">simply a list of sentences in the form of <em>as a &lt;type of user&gt;, I want &lt;some goal&gt; so that &lt;some reason&gt;</em></a>)</li>
              <li>A list/spreadsheet of <a href="http://www.stellman-greene.com/2009/05/03/requirements-101-user-stories-vs-use-cases/">use cases (see the end of this article)</a></li>
              <li>A <a href="https://www.andrew.cmu.edu/course/90-754/umlucdfaq.html">Use Case Diagram</a></li>
            </ul>
          </li>
          <li><strong>Which modules / concept will you research?</strong>
            <ul>
              <li>List of research topics</li>
              <li>A brief description of concept (3 or 4 sentence each)
                <ul>
                  <li>What is it?</li>
                  <li>Why use it?</li>
                  <li>List of possible candidate modules or solutions</li>
                  <li>Points for research topic (based on specifications above)</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>Code
        <ul>
          <li>A skeleton express app
            <ul>
              <li>Start populating your package.json with required modules</li>
              <li><strong>It&#39;s ok to just have boilerplate code and no route handlers!</strong></li>
            </ul>
          </li>
          <li>A 1st draft mongoose schema</li>
        </ul>
      </li>
    </ul>

    <div id="final">

      <p><a id="milestone2" name="milestone2"></a></p>

      <p><br />
<br />
<br /></p>

      <h3 id="due-date-412-at-11pm-due-date-413-at-11pm---milestone-2---initial-deployment-and-first-form-20-points"><strike>Due Date 4/12 at 11pm</strike> <strong>Due Date 4/13 at 11pm</strong> - Milestone 2 - Initial Deployment and First Form (20 points)</h3>

      <ol>
        <li>your server and port name can be accessed through a link in a piazza post for milestone #2</li>
        <li>attempt to deploy your code to Courant&#39;s servers by following <a href="homework/deploy.html">instructions</a></li>
        <li><span class="warning">use <a href="https://docs.google.com/forms/d/e/1FAIpQLSeDK0kCfwzhpZbEW1XSWq1sT1WIinZdZJ8Q8KjQiB5vTFKh9Q/viewform">this form to submit your deployed site</a></span></li>
        <li>your submission won&#39;t be graded unless the form above is sent with urls to your deployed site</li>
        <li>your deployed site should contain the following progress:
          <ul>
            <li><strong>one working form (that is not login or registration)</strong>
              <ul>
                <li>&#8230;that should allow data to be modified or deleted</li>
                <li>the results of submitting this form should be apparent/viewable</li>
              </ul>
            </li>
            <li>show <em>some</em> progress on at least 1 of your research topics,  <strong>it doesn&#39;t have to be fully working&#8230; stub code from documentation or pseudocode is adequate</strong>
              <ul>
                <li>consequently, a link to the github repository / line no that shows any proof of work is sufficient</li>
                <li>or, if it&#39;s something that&#39;s already visible, a link to the a page on your site that&#39;s deployed to the server</li>
              </ul>
            </li>
          </ul>
        </li>
      </ol>

      <p><a name="milestone03"></a></p>

      <p><br />
<br />
<br /></p>

      <h3 id="due-date-420-at-11pm---milestone-3---2nd-form-and-more-progress-on-research-20-points"><strong>Due Date 4/20 at 11pm</strong> - Milestone 3 - 2nd Form and More Progress on Research (20 points)</h3>

      <ol>
        <li>make at least 3 additional commits to add:
          <ul>
            <li>your 2nd form / ajax interaction</li>
            <li>make more progress on your research topics</li>
          </ul>
        </li>
        <li><strong>update youre README.md to reflect any changes to what your final project is</strong> (you cannot change your project idea after this point, but you can make modifications to your research topics)</li>
        <li>redeploy your code to Courant&#39;s server by running git pull and restarting forever (<strong>do not do this until you receive your milestone #2 grades</strong>)
          <ol>
            <li><code class="highlighter-rouge">ssh</code> into linserv1 or linserv2 (remember, you have to go to access.cims.nyu.edu first)</li>
            <li><code class="highlighter-rouge">cd</code> into your project directory (should be in <code class="highlighter-rouge">~/opt/NETID-final-project</code>)</li>
            <li>run <code class="highlighter-rouge">forever stopall</code> and <code class="highlighter-rouge">forever start bin/www</code>
              <ul>
                <li>you&#39;ll have to use the full path to forever, likely <code class="highlighter-rouge">~/usr/local/node_modules/bin/forever</code></li>
                <li>and perhaps the full bath to <code class="highlighter-rouge">bin/www</code></li>
              </ul>
            </li>
          </ol>
        </li>
        <li><strong><a href="https://docs.google.com/forms/d/e/1FAIpQLSd720a6HdIc8Ok_raL4VAk2p5C9sfQVXHZmcaSbq30QJ8u67w/viewform">fill out form to submit assignment</a></strong>; it will contain:
          <ul>
            <li><strong>both working forms or ajax interactions</strong></li>
            <li>a link to show code changes since milestone #2:
              <ul>
                <li>start with the url to your repository: <code class="highlighter-rouge">https://github.com/nyu-csci-ua-0480-008-spring-2019/NETID-final-project/</code></li>
                <li>and append the following to the url: <code class="highlighter-rouge">compare/master@%7B04-20-19%7D...master</code></li>
                <li>for example: <code class="highlighter-rouge">https://github.com/nyu-csci-ua-0480-008-spring-2019/NETID-final-project/compare/master@%7B04-13-19%7D...master</code></li>
              </ul>
            </li>
          </ul>
        </li>
      </ol>

      <p><a id="final_submit" name="final_submit"></a></p>

      <p><br />
<br />
<br />
<br /></p>

      <h3 id="due-date-426-429--at-11pm---final-project-complete-and-code-is-fully--deployed-40-points"><strong>Due Date</strong> <strike>4/26</strike> 4/29  <strong>at 11PM</strong> - Final Project Complete and Code is fully  <em>Deployed</em> (40 points)</h3>

      <ul>
        <li><strong>all commits must be in by Monday, April 29th</strong></li>
        <li><strong>project must be deployed</strong> on cims servers (or other platform, such as Heroku, gomix, zeit, etc.)
          <ul>
            <li>if your application needs to be restarted while being graded; I will contact you</li>
            <li>you will not receive a penalty for restarting after the due date</li>
          </ul>
        </li>
        <li><strong>the <a href="https://docs.google.com/forms/d/e/1FAIpQLSfpI94OS-dQkjFpPgVuYyJm2Yo7-kmcUPEX6qF97PmH25f_Ww/viewform">final project form submission</a> must be filled out</strong> (if a form is not submitted, you will receive a 0 for your project)</li>
        <li><strong>Research Topic Notes</strong>
          <ul>
            <li>if you require a <strong>specific user to be logged in</strong>, please add the username and password in the form submission above</li>
            <li>if you used <strong>unit testing</strong> or <strong>functional testing</strong>, upload a screen shot or an animated gif of your tests running to the documentation folder of your project; link to it in your form submission</li>
            <li>if you used <strong>grunt</strong>, <strong>gulp</strong>, or <strong>webpack</strong> &#8230; or some if you used a pre-processor like babel, sass, etc. &#8230; link to the relevant configuration file in your form submission</li>
            <li>if you are using <strong>facebook login</strong>, and your application is in <em>testing mode</em>, add this user: <code class="highlighter-rouge">Eef Aqua</code> so that graders can test your application</li>
          </ul>
        </li>
      </ul>

      <p><br />
<br />
<br /></p>

    </div>
  </div>
</div>
:ET