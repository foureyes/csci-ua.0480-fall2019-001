I"É<section class="intro-slide">
  <h1 id="a-quick-look-at-jquery">A Quick Look at jQuery</h1>

  <h3 id="csci-ua0480-001">CSCI-UA.0480-001</h3>

  <p><small></small></p>
</section>

<section>
  <h2 id="why-jquery">Why jQuery</h2>

  <p>So&#8230; all of the stuff that we&#39;ve doing manually, <strong>JQuery makes sooo much easier.</strong> &#8594;</p>

  <ul>
    <li>manipulating the DOM</li>
    <li>facilitating event handling</li>
    <li>a cleaner ajax interface</li>
    <li>animation/visual effects</li>
  </ul>

  <p><br />
It also abstracts away the details of:</p>

  <ul>
    <li>what should I use to change style? .style, classList, etc.?</li>
    <li>which event handling should I use for ajax? onload or addEventListener(&#39;load&#39;, callback)</li>
  </ul>

  <p><br />
It&#39;s <strong>a lot</strong>. Sometimes it&#39;s overkill. But usually it&#39;s super useful. &lt;/section&gt;</p>

  <section>
    <h2 id="jquery">$, jQuery</h2>

    <p>Everything in jQuery revolves around the <strong><code>jQuery</code></strong> function.</p>

    <ul>
      <li><strong><code>jQuery</code></strong> allows you to select elements: <code>var paragraphs = jQuery('p')</code></li>
      <li>the <code>jQuery</code> function is more commonly used as <strong><code>$</code></strong>: <code>$('p')</code></li>
      <li>you can use any css selector as an argument:
        <ul>
          <li><code>#someID</code></li>
          <li><code>.aClass</code></li>
          <li><code>ul li</code></li>
        </ul>
      </li>
    </ul>
  </section>

  <section>
    <h2 id="determining-if-the-dom-content-is-ready">Determining if the DOM Content is Ready</h2>

    <p>Instead of adding an event listener, you could use&#8230;</p>

    <pre><code data-trim="" contenteditable="">
$(document).ready(callback);
</code></pre>

  </section>

  <section>
    <h2 id="creating-elements">Creating Elements</h2>

    <pre><code data-trim="" contenteditable="">
$
</code></pre>

  </section>
</section>
:ET