I"|<section class="intro-slide">
  <h1 id="back-to-html-elements-attributes">Back to HTML Elements, Attributes</h1>

  <h3 id="csci-ua0480-001">CSCI-UA.0480-001</h3>

  <p><small></small></p>
</section>

<section>
  <h2 id="element-attributes">Element Attributes</h2>

  <p><strong>What&#39;s an attribute again? What are some examples of attributes?</strong> &#8594;</p>

  <ul class="fragment">
    <li>it&#39;s additional information about the element</li>
    <li>it&#39;s written as a name/value pair within an opening tag: <code>&lt;element attributeName="attributeValue"&gt;</code></li>
    <li>some examples include the <code>type</code> in <code>input elements</code>, the <code>src</code> in an <code>img</code> tag</li>
  </ul>
</section>

<section>
  <h2 id="changing-attributes">Changing Attributes</h2>

  <p>Most attributes can be accessed as properties on that particular element&#39;s object. The property name is usually just the camel-case name of the attribute.</p>

  <p><strong>Try writing a tiny script that takes all of the images on a page and changes the src of those images to <a href="https://foureyes.github.io/csci-ua.0480-fall2017-007/resources/img/disapproval.png">the look of disapproval</a></strong> &#8594;</p>

  <pre class="fragment"><code data-trim="" contenteditable="">
const images = document.getElementsByTagName('img');

for (let i=0; i &lt; images.length; i++) {
	images[i].src = "http://foureyes.github.io/csci-ua.0480-fall2017-007/resources/img/disapproval.png";;
}
</code></pre>
</section>

<section>
  <h2 id="any-attribute">Any Attribute!</h2>

  <p><strong>HTML actually lets you create your own attributes&#8230; so you can add any attribute you&#39;d like to elements.</strong> &#8594;</p>

  <ul>
    <li>generally, custom attributes are prefixed with data (you&#39;ll see this in many frameworks, such as Angular.js)</li>
    <li>data-* attributes allow you to store extra information on standard, semantic HTML elements</li>
    <li>(<a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes">see the using data attributes article on mdn</a>)</li>
    <li>for example: <code>&lt;p data-highlight&gt;</code></li>
  </ul>
</section>

<section>
  <h2 id="getting-and-setting-attributes">Getting and Setting Attributes</h2>

  <p>The following methods can be called on elements in order to read or set attributes:</p>

  <ul>
    <li><strong><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element.getAttribute"><code>element.getAttribute(name)</code></a></strong> - gives back value of attribute with specified name; if it doesn&#39;t exist, depending on implementation, you&#39;ll get back null or empty string</li>
    <li><strong><a href="https://developer.mozilla.org/en-US/docs/Web/API/element.setAttribute"><code>element.setAttribute(name, value)</code></a></strong> - changes attribute with specified name to specified value; if attribute doesn&#39;t exist, create it with that value</li>
    <li><strong><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element.hasAttribute"><code>element.hasAttribute(name)</code></a></strong> - returns true if attribute exists in element, false otherwise</li>
  </ul>

</section>
<section>
  <h2 id="attribute-related-methods-continued">Attribute Related Methods Continued</h2>

  <p>You could use these methods on both standard element attributes, such as <code>href</code>, <code>value</code>, etc. &#8230; but they&#39;re also useful for custom attributes</p>

  <p><strong>Let&#39;s try these out on our <a href="../../code/class18.html">sample page</a></strong> &#8594;</p>

  <pre><code data-trim="" contenteditable="">
// change an image's src (similar to just using the attribute)
document.getElementsByTagName('img')[0].setAttribute('src', 'http://foureyes.github.io/csci-ua.0480-fall2017-007/resources/img/disapproval.png')

// check for a class attribute... and try to read it
document.getElementById('content').hasAttribute('class')
document.getElementById('content').getAttribute('class')

// set it
document.getElementById('content').setAttribute('class', 'highlight');

// check again, and read it
document.getElementById('content').hasAttribute('class')
document.getElementById('content').getAttribute('class')
</code></pre>

</section>
<section>
  <h2 id="data--as-javascript-hooks">Data-* as JavaScript Hooks</h2>

  <p>We can use <strong>data-*</strong> attributes as hooks for our JavaScript.</p>

  <p><strong>Create a script that substitues all of the periods with 5 exclamation points in the <a href="../../code/class18.html">sample page</a>. Only do this for paragraph elements that have a <code>data-shout</code> attribute.</strong></p>

  <p>You can use the string&#39;s replace method and a regular expression to do this: <code>replace(/\./g, '!!!!!')</code></p>

  <ul>
    <li><code>/</code>&#39;s mean regular expression</li>
    <li>\. is match period</li>
    <li>the g after the regex delimiters mean find all matches instead of just the first (<em>global</em>)</li>
  </ul>
</section>

<section>
  <h2 id="a-potential-solution">A Potential Solution</h2>

  <p>Using a <strong>data-*</strong> attribute&#8230;</p>

  <pre><code data-trim="" contenteditable="">
const paragraphs = document.getElementsByTagName('p');
for (let i = 0; i &lt; paragraphs.length; i++) {
	if (paragraphs[i].hasAttribute('data-shout')) {
		paragraphs[i].textContent = paragraphs[i].textContent.replace(/\./g, '!!!!!');
	}
}
</code></pre>
</section>

:ET